"use strict";function _createForOfIteratorHelper(e,t){var n,o,r,a,i="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(i)return o=!(n=!0),{s:function(){i=i.call(e)},n:function(){var e=i.next();return n=e.done,e},e:function(e){o=!0,r=e},f:function(){try{n||null==i.return||i.return()}finally{if(o)throw r}}};if(Array.isArray(e)||(i=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return i&&(e=i),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}var myMap,video,durationControl,soundControl,intervalid,soundLevel,openItem=function(e){var e=e.closest(".team__item"),t=e.find(".team__content"),n=t.find(".team__content-block").height();e.addClass("active"),t.height(n)},closeEveryItem=function(e){var t=e.find(".team__content");e.find(".team__item").removeClass("active"),t.height(0)},toggleHamburgerMenu=($(".team__title-name").click(function(e){var e=$(e.currentTarget),t=e.closest(".team");e.closest(".team__item").hasClass("active")?closeEveryItem(t):(closeEveryItem(t),openItem(e))}),function(){$("#hamburger").toggleClass("hamburger--active"),$(".menu").toggleClass("menu--active")}),init=($("#hamburger").on("click",function(e){e.preventDefault(),toggleHamburgerMenu()}),$(".menu__link").on("click",function(e){e.preventDefault(),toggleHamburgerMenu()}),function(){myMap=new ymaps.Map("map",{center:[59.935274,30.312388],zoom:11,controls:[]});var t=new ymaps.GeoObjectCollection({},{draggable:!1,iconLayout:"default#image",iconImageHref:"/img/maps.png",iconImageSize:[46,57],iconImageOffset:[-35,-51]});[[59.94554327989287,30.38935262114668],[59.91142323563909,30.50024587065841]].forEach(function(e){t.add(new ymaps.Placemark(e))}),myMap.geoObjects.add(t),myMap.behaviors.disable("scrollZoom")}),validateFields=(ymaps.ready(init),!function(){function i(e,t){var n=(e=e.next()).children();e.width(t+"px"),0!==t&&n.outerWidth(t+"px")}function o(e){e.parent().removeClass("menu-prod__item--active"),e.removeClass("menu-prod__button--active"),i(e,0)}function r(e){var t,n,o,r,a;e.parent().addClass("menu-prod__item--active"),e.addClass("menu-prod__button--active"),t=e,n=524,o=$(window).width(),t=t.outerWidth(!0),r=window.matchMedia("(max-width: 768px").matches,a=window.matchMedia("(max-width: 480px").matches,r&&(n=o-t*l.length),i(e,n=a?o-t:n)}var l=$(".menu-prod__item");$(".menu-prod__button").click(function(e){e.preventDefault();var e=$(e.currentTarget),t=e.hasClass("menu-prod__button--active"),n=$(".menu-prod__button--active");e.hasClass("menu-prod__button")&&t&&n&&o(n),e.hasClass("menu-prod__button")&&!t&&(n&&o(n),r(e))})}(),function(e,t){return t.forEach(function(e){e.removeClass("input-error"),""===e.val().trim()&&e.addClass("input-error")}),0===e.find(".input-error").length}),findBlockByAlias=($(".form").submit(function(e){e.preventDefault();var e=$(e.currentTarget),t=e.find("[name='name']"),n=e.find("[name='phone']"),o=e.find("[name='comment']"),r=e.find("[name='to']"),a=$("#modal"),i=a.find(".modal__content");a.removeClass("error-modal"),validateFields(e,[t,n,o,r])&&((e=$.ajax({url:"https://webdev-api.loftschool.com/sendmail",method:"post",data:{name:t.val(),phone:n.val(),comment:o.val(),to:r.val()}})).done(function(e){i.text(e.message)}),e.fail(function(e){e=e&&e.hasOwnProperty("responseJSON")&&e.responseJSON.hasOwnProperty("message")?e.responseJSON.message:"Произошла ошибка, попробуйте позже";i.text(e),a.addClass("error-modal")}),e.always(function(){$.fancybox.open({src:"#modal",type:"inline"})}))}),$(".app-submit-btn").click(function(e){e.preventDefault(),$.fancybox.close()}),function(n){return $(".reviews__item").filter(function(e,t){return $(t).attr("data-linked-with")==n})}),slider=($(".interactive-avatar__link").click(function(e){e.preventDefault();var e=$(e.currentTarget),t=e.attr("data-open"),t=findBlockByAlias(t),e=e.closest(".reviews__switcher-item");t.addClass("reviews__item--active").siblings().removeClass("reviews__item--active"),e.addClass("interactive-avatar--active").siblings().removeClass("interactive-avatar--active")}),!function(){var e,n=document.querySelector(".wrapper").querySelector(".maincontent"),d=n.querySelectorAll(".section"),o=document.querySelectorAll(".fixed-menu__item"),t=document.querySelectorAll("[data-scroll-to]"),r=!1,a=_createForOfIteratorHelper(t);try{for(a.s();!(e=a.n()).done;)!function(){var t=e.value;t.addEventListener("click",function(e){e.preventDefault(),i(t.dataset.scrollTo)})}()}catch(e){a.e(e)}finally{a.f()}function i(u){var e="".concat(-100*u,"%");function t(e){e[u].classList.add("is-active");var t,n=_createForOfIteratorHelper(e);try{for(n.s();!(t=n.n()).done;){var o=t.value;o!=e[u]&&o.classList.remove("is-active")}}catch(e){n.e(e)}finally{n.f()}var r=d[u].dataset.light,a=$(".fixed-menu__item"),i=$(".fixed-menu__link"),l=$(".hamburger__plank");1==r?(a.addClass("dark"),i.addClass("dark"),l.addClass("dark")):(a.removeClass("dark"),i.removeClass("dark"),l.removeClass("dark"))}r||(r=!0,t(d),n.style.transform="translateY(".concat(e,")"),setTimeout(function(){r=!1,t(o)},1e3))}function l(e){var t=function(e){for(var t=0;t<e.length;t++){var n=e[t];if(n.classList.contains("is-active"))return{iterIndex:t,iterActive:n,iterNext:n.nextElementSibling,iterPrev:n.previousElementSibling}}}(d);"up"===e&&t.iterNext&&i(t.iterIndex+1),"down"===e&&t.iterPrev&&i(t.iterIndex-1)}document.addEventListener("wheel",function(e){l(0<e.deltaY?"up":"down")}),document.addEventListener("keydown",function(e){switch(e.keyCode){case 40:l("up");break;case 38:l("down")}})}(),$(".long__slider").bxSlider({pager:!1,controls:!1}));function playStop(){document.querySelector(".video__play").classList.toggle("video__play--active"),durationControl.max=video.duration,video.paused?(video.play(),intervalid=setInterval(updateDuration,1e3/66)):(video.pause(),clearInterval(intervalid)),updateDuration()}function updateDuration(){durationControl.value=video.currentTime}function stopInterval(){video.pause(),clearInterval(intervalid)}function setVideoDuration(){video.currentTime=durationControl.value,intervalid=setInterval(updateDuration,1e3/66)}function changeSoundVolume(){video.volume=soundControl.value/10}function soundOf(){0===video.volume?(video.volume=soundLevel,soundControl.value=10*soundLevel):(soundLevel=video.volume,video.volume=0,soundControl.value=0)}$(".slider__prod--back").click(function(e){e.preventDefault(),slider.goToPrevSlide()}),$(".slider__prod--next").click(function(e){e.preventDefault(),slider.goToNextSlide()}),video=document.querySelector("#video"),document.addEventListener("DOMContentLoaded",function(e){video.addEventListener("click",playStop);for(var t=document.querySelectorAll(".play"),n=0;n<t.length;n++)t[n].addEventListener("click",playStop);document.getElementById("micLevel").addEventListener("click",soundOf),(durationControl=document.getElementById("durationLevel")).addEventListener("input",setVideoDuration),durationControl.min=0,durationControl.value=0,(soundControl=document.getElementById("volumeLevel")).addEventListener("click",changeSoundVolume),soundControl.addEventListener("mouseup",changeSoundVolume),soundControl.min=0,soundControl.max=10,soundControl.value=soundControl.max});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
